{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["BASE_URL","getUser","userId","url","fetch","then","response","json","data","TodoList","todos","titleFilter","selectedUserId","selectUser","inputHandler","selectHandler","className","htmlFor","placeholder","type","value","onChange","map","todo","key","id","completed","checked","readOnly","title","onClick","CurrentUser","state","selectedUser","this","props","setState","prevProps","name","email","phone","clearUser","React","Component","App","todoStatus","event","target","getTodos","formatedList","todosFromServer","filter","Object","values","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e220d7dc.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => {\n  const url = `${BASE_URL}${'/todos'}`;\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data);\n};\n\nexport const getUser = (userId) => {\n  const url = `${BASE_URL}${'/users'}${userId}`;\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  titleFilter,\n  selectedUserId,\n  selectUser,\n  inputHandler,\n  selectHandler,\n}) => (\n  <div className=\"TodoList\">\n\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <div className=\"search-bar\">\n        <label htmlFor=\"\">\n          <input\n            className=\"search-bar-input\"\n            placeholder=\"Enter ToDo title\"\n            type=\"text\"\n            value={titleFilter}\n            onChange={inputHandler}\n          />\n        </label>\n        <select onChange={selectHandler}>\n          <option value=\"all\">All</option>\n          <option value=\"finished\">Finished</option>\n          <option value=\"unfinished\">Unfinished</option>\n        </select>\n      </div>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={`TodoList__item TodoList__item--${todo.completed\n              ? 'checked'\n              : 'unchecked'}`}\n          >\n            <label>\n              {todo.completed ? (\n                <input\n                  type=\"checkbox\"\n                  checked\n                  readOnly\n                />\n              ) : (\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                />\n              )}\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={selectedUserId === todo.userId ? (\n                'TodoList__user-button--selected button'\n              ) : (\n                'TodoList__user-button button'\n              )}\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId);\n              }}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  titleFilter: PropTypes.string.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  inputHandler: PropTypes.func.isRequired,\n  selectHandler: PropTypes.func.isRequired,\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: {},\n  }\n\n  componentDidMount() {\n    getUser(`/${this.props.userId}`)\n      .then((selectedUser) => {\n        this.setState({ selectedUser });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(`/${this.props.userId}`)\n        .then((selectedUser) => {\n          this.setState({ selectedUser });\n        });\n    }\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user\n              {' : #'}\n              {selectedUser.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n          <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n          <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n          <button\n            className=\"CurrentUser__clear-btn\"\n            type=\"button\"\n            onClick={this.props.clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { getTodos } from './api/api';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    titleFilter: '',\n    todoStatus: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  selectUser = (userId) => {\n    if (userId !== this.state.selectedUserId) {\n      this.setState({ selectedUserId: userId });\n    }\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  inputHandler = (event) => {\n    this.setState({ titleFilter: event.target.value });\n  }\n\n  selectHandler = (event) => {\n    this.setState({ todoStatus: event.target.value });\n  }\n\n  render() {\n    const { todos, selectedUserId, titleFilter, todoStatus } = this.state;\n    let formatedList;\n\n    const todosFromServer = todos\n      .filter(todo => !Object.values(todo).includes(null))\n      .filter(todo => todo.title.includes(titleFilter));\n\n    switch (todoStatus) {\n      case 'all':\n        formatedList = todosFromServer;\n        break;\n      case 'finished':\n        formatedList = todosFromServer.filter(todo => todo.completed === true);\n        break;\n      case 'unfinished':\n        formatedList = todosFromServer.filter(todo => todo.completed === false);\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={formatedList}\n            titleFilter={titleFilter}\n            selectedUserId={selectedUserId}\n            selectUser={this.selectUser}\n            inputHandler={this.inputHandler}\n            selectHandler={this.selectHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}